## config.env.template

################################################################################
### COMPILATION FLAGS
################################################################################

## Compilation flags configurations
## This associative array contains the flag configurations
## Uncomment and modify the lines below to customize the flag configurations
## Default: ( ["CONFIG"]="CSV=1" ["TIMESTAGES"]="CSV=1 TIMESTAGES=1" )
# CONFIG_FLAGS='["CONFIG"]="CSV=1" ["TIMESTAGES"]="CSV=1 TIMESTAGES=1"'

################################################################################
### API SELECTOR
################################################################################

## List of executables
## This list determines which executables will be run in the script
## Uncomment and modify the line below to customize the executables
## Default: ("pipeline" "fgfn" "fgan" "syclevents")
# API_executables=("pipeline" "fgfn" "fgan" "syclevents")

################################################################################
### INPUT PARAMETERS VIVID
################################################################################

## Image resolutions and number of frames
## This associative array contains the image resolutions (keys) and the corresponding number of frames (values)
## Uncomment and modify the line below to customize the image resolutions and number of frames
## Frames: ( ["1"]="200" ["3"]="200" ) > (1-'FullHD', 3-'4K') -- Process 200 frames
## Time:   ( ["1"]="15s" ["3"]="15s" ) > (1-'FullHD', 3-'4K') -- Process 15 seconds of video 
## Same resolution but different number of frames: ( ["1_10"]="10" ["1_400"]="400" ["1_800"]="800" )
# IMG_RES_AND_FRAMES='["1"]="200" ["3"]="200"'

## Number of threads
## This list determines the number of threads used by the script
## Uncomment and modify the line below to customize the number of threads
## Default: ("8")
# num_threads=("8")

## Backend GPU
## This list contains the GPU backend options: 0-OpenCL, 1-Level0, 2-CUDA
## Uncomment and modify the line below to customize the GPU backend
## Default: ("0")
# list_backend_GPU=("0")

## Backend CPU
## This list contains the CPU backend options: C++, AVX, SYCL
## Uncomment and modify the line below to customize the CPU backend
## Default: ("C++" "AVX" "SYCL" "SIMD")
# list_backend_CPU=("C++" "AVX" "SYCL" "SIMD")

## Queue order
## This list contains the queue order options: 0-sycl::queue::in_order (default), 1-sycl::queue::out_of_order
## Uncomment and modify the line below to customize the queue order
## Default: ("0")
# list_queue_order=("0")

## List of configurations to run
## This list contains the configuration stages: CPU, 001, 010, 011, 100, 101, 110, 111, GPU
## Uncomment and modify the line below to customize the configuration stages
## Default: ("CPU" "001" "010" "011" "100" "101" "110" "111" "GPU")
# default_config_stages=("CPU" "001" "010" "011" "100" "101" "110" "111" "GPU")

################################################################################
### VARIABLES TO CONTROL THE TESTS
################################################################################

## Default number of elements loop
## This variable determines the number of times to measure the same configuration
## Uncomment and modify the line below to customize the default number of elements loop
## Default: 5
# default_num_elements_loop=5

## Timestages number of elements loop
## This variable determines the number of times to measure the same configuration when TIMESTAGES is enabled
## Uncomment and modify the line below to customize the timestages number of elements loop
## Default: 5
# timestages_num_elements_loop=5

################################################################################
### Variables for the automatic search shell script (searchBestConfig.sh)
################################################################################

## Compilation flags for the search of the best configuration
## This associative array contains the flag configurations for the search of the best configuration
## Uncomment and modify the lines below to customize the flag configurations for the search of the best configuration
## Default: ( ["CONFIG"]="PWDIST=0" )
# CONFIG_FLAGS_SEARCH='["CONFIG"]="PWDIST=0"'

## Number of elements loop for the search of the best configuration
## This variable determines the number of times to measure the same configuration when searching the best configuration
## Uncomment and modify the line below to customize the number of elements loop for the search of the best configuration
## Default: 1
# num_elements_loop_search=1

## Number of frames for random configuration
## This variable determines the number of frames launch each random configuration
## Uncomment and modify the line below to customize the number of frames for the random configuration
## Default: 200 (same as the default number of frames)
# num_frames_random_search=200

################################################################################
### Variables for the automatic search Python script (searchBestConfig.py)
################################################################################

## Maximum number of iterations to search for the best configuration
## This variable determines the maximum number of iterations to search for the best configuration
## Uncomment and modify the line below to customize the number of iterations
## Default: 10
# max_num_iters_search=10

## Number of tests per iteration
## This variable determines how many configurations will be generated per iteration
## Uncomment and modify the line below to customize the number of configurations per iteration
## Default: 100
# num_configs_per_iter=100

## Maximum number of iterations without improvement
## This variable determines the maximum number of iterations without improvement, if this number is reached the search will stop
## Uncomment and modify the line below to customize the maximum number of iterations without improvement
## Default: 3
# max_num_iterations_no_improvement=3

## Boolean to enable/disable the use of a pruned DB with respect to the best time (default)
## This variable determines if the search will use a pruned DB with respect to the best time (default) or not
## MORE INFO: This option may cause the search to focus too narrowly on a local minimum.
## Uncomment and modify the line below to customize the use of a pruned DB
## Default: 1 (enabled)
# use_prunned_search_space=1

## Boolean to enable/disable data saving between iterations
## This variable determines if the data will be saved between iterations or not
## Uncomment and modify the line below to customize the data saving between iterations
## Default: 1 (enabled)
# save_data_between_iterations=1

## Boolean to enable/disable the use a search infinitely until it finds the best configuration
## This variable determines whether the search will be infinite or not (until the best configuration is found).
## Uncommenta and modify the operation of the script so that it searches infinitely until it finds the best configuration.
## Default: 1 (enabled)
# run_until_best=1

## Boolean to enable/disable the use of the long or short configuration
## This variable determines whether the long or short configuration
## Uncomment and modify the line below to customize the use of the long or short configuration
## Default: 0 (disabled except when config_stages is '111')
# short_version=0